{"version":3,"sources":["constants/index.ts","components/BlogDetails.tsx","components/BlogHome.tsx","utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ENTRIES","Map","BlogDetail","blogDetails","slug","useState","blogData","setBlogData","blogUrl","get","useEffect","url","fetch","then","response","text","res","useBlogDetails","useParams","blogName","description","className","BlogHome","allEntries","entries","setEntries","readableEntries","Array","from","entry","displayName","split","slice","join","trim","toLowerCase","replace","w","c","toUpperCase","linkTarget","useAllEntries","map","idx","to","App","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGaA,EAAU,IAAIC,IAAoB,CAC3C,CAJY,8BAIF,4FACV,CAJa,YAIF,4E,iCC2BA,SAASC,IAAc,IAE5BC,EAtBV,SAAwBC,GAAe,IAAD,IACFC,mBAAS,IADP,mBAC3BC,EAD2B,KACjBC,EADiB,KAE5BC,EAAO,UAAGR,EAAQS,IAAIL,UAAf,QAAwB,GAerC,OAbAM,qBAAU,WARd,IAA4BC,EASpBJ,EAAY,IACI,KAAZC,GAIJI,OAdoBD,EAcKH,EAbvB,GAAN,OAAUG,EAAV,gBAauCE,MAAK,SAAAC,GACpCA,EAASC,OAAOF,MAAK,SAAAG,GACjBT,EAAYS,WAGrB,CAACR,IAEGF,EAKaW,CADCC,cAAbC,UAGR,MAAoB,KAAhBhB,EACO,cAAC,IAAD,CAAOiB,YAAY,iBAGvB,sBAAKC,UAAU,cAAf,UACH,cAAC,IAAD,UAAgBlB,IADb,O,OCTI,SAASmB,IACpB,IAAMC,EAZV,WAA0B,IAAD,EACSlB,mBAA6B,IADtC,mBACdmB,EADc,KACLC,EADK,KAQrB,OALAf,qBAAU,WACN,IAAMgB,EAAkBC,MAAMC,KAAK5B,EAAQwB,WAAW,gBAZjCK,EAYiC,0BAZjCA,EAYiC,KAPnD,CAAElB,IAOiD,KAP5CmB,YAJAD,EAAME,MAAM,KAEcC,MAAM,GAAGC,KAAK,KCbjDC,OACAC,cACAC,QAAQ,UAAU,SAACC,GAAD,OAAQA,EAAED,QAAQ,OAAO,SAACE,GAAD,OAAOA,EAAEC,oBDa9BC,WAAYX,MAQnCJ,EAAWC,KACZ,IAEIF,EAIYiB,GAEnB,OAAO,sBAAKpB,UAAU,cAAf,UACH,yCACCE,EAAWmB,KAAI,SAACb,EAAOc,GACpB,OAAO,4BACH,cAAC,IAAD,CAAMC,GAAI,UAAYf,EAAMW,WAA5B,SACKX,EAAMC,eAFAa,SEfZE,MAhBf,WACI,OACI,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,mBAAZ,SACI,cAAC7C,EAAD,MAEJ,cAAC,IAAD,CAAO6C,KAAK,IAAZ,SACI,cAAC,EAAD,YCALC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.46f2fe88.chunk.js","sourcesContent":["const ENTRY_0 = '2020-legacy-code-case-study';\nconst ENTRY_10 = '2021-test';\n\nexport const ENTRIES = new Map<string, string>([\n    [ENTRY_0, 'https://raw.githubusercontent.com/green-john/blog/main/blogs/2020-legacy-code-case-study'],\n    [ENTRY_10, 'https://raw.githubusercontent.com/green-john/blog/main/blogs/2021-test'],\n]);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Empty } from 'antd';\nimport { ENTRIES } from '../constants';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport './BlogDetails.css';\n\n\nfunction getBlogContentsUrl(url: string): string {\n    return `${url}/README.md`;\n}\n\nfunction useBlogDetails(slug: string) {\n    const [blogData, setBlogData] = useState('');\n    const blogUrl = ENTRIES.get(slug) ?? '';\n\n    useEffect(() => {\n        setBlogData('');\n        if (blogUrl === '') {\n            return;\n        }\n\n        fetch(getBlogContentsUrl(blogUrl)).then(response => {\n            response.text().then(res => {\n                setBlogData(res);\n            });\n        });\n    }, [blogUrl]);\n\n    return blogData;\n}\n\nexport default function BlogDetail() {\n    const { blogName } = useParams<{ blogName: string }>();\n    const blogDetails = useBlogDetails(blogName);\n\n    if (blogDetails === '') {\n        return <Empty description=\"Nothing here\"/>;\n    }\n\n    return <div className=\"blogWrapper\">\n        <ReactMarkdown>{blogDetails}</ReactMarkdown>;\n    </div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ENTRIES } from '../constants';\nimport { capitalizeStr } from '../utils';\nimport './BlogHome.css';\n\ninterface EntryDisplayData {\n    displayName: string\n    linkTarget: string\n    url: string\n}\n\nfunction getDisplayEntryData(entry: string, url: string): EntryDisplayData {\n    const parts = entry.split('-');\n\n    const displayName = capitalizeStr(parts.slice(1).join(' '));\n\n    return { url, displayName, linkTarget: entry };\n}\n\nfunction useAllEntries() {\n    const [entries, setEntries] = useState<EntryDisplayData[]>([]);\n\n    useEffect(() => {\n        const readableEntries = Array.from(ENTRIES.entries(), ([key, val]) => getDisplayEntryData(key, val));\n        setEntries(readableEntries);\n    }, []);\n\n    return entries;\n}\n\nexport default function BlogHome() {\n    const allEntries = useAllEntries();\n\n    return <div className=\"homeWrapper\">\n        <h1>My Blog</h1>\n        {allEntries.map((entry, idx) => {\n            return <p key={idx}>\n                <Link to={'/blogs/' + entry.linkTarget}>\n                    {entry.displayName}</Link>\n            </p>;\n        })}\n    </div>;\n}\n","export function capitalizeStr(s: string): string {\n    return s\n        .trim()\n        .toLowerCase()\n        .replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\n}\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport BlogDetail from './components/BlogDetails';\nimport BlogHome from './components/BlogHome';\n\nfunction App() {\n    return (\n        <Router basename=\"/\">\n            <Switch>\n                <Route path=\"/blogs/:blogName\">\n                    <BlogDetail />\n                </Route>\n                <Route path=\"/\">\n                    <BlogHome />\n                </Route>\n            </Switch>\n\n        </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}